0. Review

Programming laungage : 개발자와 컴퓨터가 소통하기 위한 언어.
Source Code : 개발자와 컴퓨터가 소통할 수 있는 언어를 작성하는 것.
Compile : 사람의 언어를 컴퓨터의 언어로 번역해주는 작업.
Complier : 컴파일 작업을 해주는 번역기
컴파일러의 해석방향 : 위에서 아래로, 좌에서 우로
프로그램의 동작원리
	<일반 프로그램>	<JAVA 프로그램>
	SW		SW
	---		JVM
	OS		OS
	HW		HW

일반적인 프로그램의 경우 : 프로그램이 실행 -> 프로그램을 구성하는 명령어와 데이터가 OS에 의해 RAM에 바로 적재 -> 프로그램이 RAM에 적재되어 실행중인 상태 = process -> CPU가 RAM에 있는 exe파일을 해석하고 실행
문제점 : OS가 변경되면 프로그램이 동작하지 않음

JAVA 프로그램의 경우 : 프로그램이 실행 -> JVM이 프로그램과 OS사이에 존재 -> JVM이 OS와 소통하기 때문에 일반 프로그램과 다르게 OS에 의존적이지 않음 = 이식성이 높음

JVM, JRE, JDK
JVM(Java Virtual Machine) : java로 만든 프로그램을 실행시켜줌
javac : .java파일(사람의 언어로 작성된 파일)을 컴파일
java : .class(컴퓨터 언어로 작성된 파일) 실행

JRE(Java Runtime Environment) : JVM을 포함하며 JVM을 실행할때 필요한 라이브러리를 가지고 있음
JDK(Java Development Kit) : JRE를 포함하며 JRE를 제외한 개발에 필요한 도구들을 가지고 있음

Class
자바의 모든 코드는 클래스 내부에 작성된다.
클래스 이름의 첫 글자는 반드시 대문자로 작성되어야함.

1. Data Type(자료형) : 값의 종류

자료형	type	byte	값
정수형	int	4	4, 6, -1, 0...
	long	8	5L, 0L, -1L...
실수형	double	8	4.0, 25.4, -4.95...
	float	4	5f, 15f, -2.4f...
논리형 	boolean	1	true, false
문자형	char	2	'가', 'a', '1'...
문자열	String	?	"가", "Hello World"...

bit : 컴퓨터가 처리할 수 있는 최소의 데이터 단위
byte : 8bit = 1byte

문자형 : 작은따옴표로 감싸진 1개의 문자 ex) 'a', 'b'
문자열 : 문자들의 나열, 자바에서는 큰 따옴표로 감싸진 0개이상의 문자

2. Variable(변수) : 어떤 값을 저장하기 위한 공간
변수의 특징 : 오직 하나의 자료형과 값만 저장할 수 있다.

2-1. 변수의 선언과 사용
변수의 선언
	자료형 변수명;
ex) int a;
double b;

변수의 값을 저장하는 방법
	변수명 = 값
= : 대입연산자 : 오른쪽에 있는 값을 왼쪽에 저장공간에 대입
a=10;
b=1.234;

선언과 동시에 초기화
	자료형 변수명 = 값;
	int c = 100;

여러개의 변수를 사용하는 법
	자료형 변수명1, 변수명2, 변수명3, ...;

변수명 선언 시 주의사항
	같은 영역에서 같은 이름의 변수를 선언할 수 없다
	되도록 소스코드 위쪽에 한꺼번에 선언한다.
	되도록 선언과 동시에 초기화를 한다
변수를 사용하는 이유
	반복되는 값들을 쉽게 관리하기 위해서 (값을 재사용하기 위해)
	값에 의미를 부여하기 위해서 사용(값에 이름을 붙여준다)

RAM
	JVM이 관리하는 메모리 영역에는 5가지 영역으로 나뉜다
	Stack, Heap, Method, BSS, Text
	
	int age=20;
	age라는 이름의 저장공간이 RAM에 할당된다.

주소값 -> RAM에 저장공간이 할당되면 고유한 값인 주소값이 부여된다.

3. Escape Character/Sequence(제어문자)
   문자열 안에서 사용되며 미리 예약된 특수한 기능을 하는 문자
   \(백슬래쉬, 역슬래쉬)를 사용한다

   \n : 줄바꿈
   \t : 일정 간격을 띄워준다(tab)
   \' : 문자열 안에 작은 따옴표를 표현
   \" : 문자열 안에 큰 따옴표를 표현
   \\ : 문자열 안에 역슬래쉬를 표현

4. output method(출력 메소드) : 괄호안에 있는 값을 콘솔창에 출력한다
println() : 전달된 값을 출력하고 줄바꿈이 된다.
print() : 전달된 값을 출력하고 줄바꿈이 되지않는다.
printf() : 형식(서식 format)에 맞는 값을 출력하고 줄바꿈이 되지 않는다.

출력메소드의 목적 : 개발자가 오류를 해결하기 위해 값을 확인할 때 사용한다.

형식 지정자 : 출력형식을 지정한다
%로 시작하며 printf()에서만 사용가능하다.
반드시 ""안에서 작성되며 , 뒤에 나오는 값이 형식 지정자 위치로 들어가게 된다.

정수	%d	decimal(10진수)
	%o	octal(8진수)
	%x	haxadecimal(16진수)
실수	%f	float(실수)
문자형	%c	character(문자)
문자열	%s	String(문자열)

