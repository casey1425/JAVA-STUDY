0. Review
0.1. Class(클래스)
- 객체지향 프로그램이에서 매우 중요한 개념
클래스 : 필드(속성), 메소드(동작)을 포함하는 하나의 틀(설계도)
객체(인스턴스)를 통해 추상적인 클래스를 구체화시켜 사용한다.

0.2. this
- 자기자신의 객체를 가리키는 키워드이다.
객체의 주소값을 담고있다.
주로 멤버변수(필드)와 메소드의 매개변수의 이름이 동이한 경우, this를 사용하여 현재 객체의 멤버변수(필드)임을 명확히 할 수 있다.

0.3. this() 생성자 호출
- 현재 클래스의 다른 생성자를 호출하는데 사용된다.
생성자 오버로딩을 할 때 중복되는 코드를 최소화할 수 있다.
다른 생성자를 호출 할 떄는 해당 생성자의 인수를 전달하여 필요한 초기화를 수행할 수 있다.

0.4. static(정적) 키워드
- method영역에서 생성되는 키워드
멈버변수의 종류
static이 붙은 변수 : static변수, 클래스 변수, 정적변수
static이 붙지 않은 변수 : 인스턴스 변수
멤버메소드의 종류
static이 붙은 메소드 : static메소드, 클래스메소드 , 정적메소드
static이 붙지 않음 메소드 : 인스턴스 메소드

1. Static
static변수와 static메소드는 객체를 생성하지 않아도 사용할 수 있다.
static변수는 객체와 상관없이 하나의 저장공간이기 때문에 모든 객체가 공유해서 사용한다.
즉, 모든 객체에서 공통으로 사용되는 변수에 static을 붙이는 것을 고려한다.
static메소드는 인스턴스 멤버를 사용할 수 없다.
static메소드가 메모리에서 사용준비가 끝나도 인스턴스 멤버는 new를 사용하여 객체를 생성하기 전까지 사용할 수 없기 때문이다.
static멤버는 클래스명.멤버명으로 사용한다.

2. 변수의 종류
지역변수(Local Variable) : 클래스의 중괄호영역은 포함되지 않으며 메소드 또는 그 안의 중괄호영역에서 선언된 변수
매개변수(Parameter) : 메소드의 소괄호 안에서 선언된 변수
인스턴스 변수(Instance Variable) : 클래스 중괄호 영역에서 선언된 변수
스태틱변수(Static Variable) : static키워드가 붙고 중괄호 영역에서 선언된 변수

3. ☆Inheritance(상속)☆
- 기존에 선언된 클래스의 멤버(생성자는 제외)를 새롭게 만들 클래스에서 사용하고 싶을때 상속을 받고 새로운 기능만 추가한다.
- 여러 클래스를 선언시 멤버가 겹치는 경우, 부모클래스를 선언하고 공통멤버를 자식 클래스들에세 상속해준다.

상속 문법
class Parents{
//부모클래스의 멤버(필드, 메소드, 생성자)
}
class Child extends Parents{//extends를 붙여 자식 클래스 임을 알려줌
//extends뒤에 부모 클래스의 이름을 붙여줌
//자식클래스의 멤버(필드, 메소드, 생성자)
//부모클래스의 멤버를 쓰지 않아도 자동으로 포함되어 있음
}

Parents : 부모클래스, 슈퍼클래스, 기반클래스, 상위클래스
Child : 자식클래스, 서브클래스, 파생클랫, 하위클래스
자바에서 상속은 단일상속만 가능하다.
모든 클래스의 최상위 클래스(부모 클래스)는 object클래스이다.

super
- 부모의 참조값, 부모의 멤버에 접근할때 사용한다.
super()
- 부모의 생성자, 자식 클래스 타입의 객체로 부모 필드에 접근할 수있다.
우리는 객체를 만들때 자식 생성자만 호출하기 때문에, 자식 필드만 메모리에 할당된다고 생각할 수 있다.
자식생성자는 항상 부모 생성자를 호출한다.
이는 자식 필드를 초기화 할때 부모 필드도 초기화 하는 것을 의미한다.
→자식 객체를 생성하려고 한다면 부모 객체가 먼저 생성하게 된다.
super()을 이용하면 부모 생성자를 호출하게 되며 super()가 없더라도 컴파일러가 자동으로 작성해준다.