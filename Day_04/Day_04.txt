0. Review
0.1. Type Casting(형변환)
	자동형변환
	-작은 byte의 값을 큰 byte 변수에 저장하면 자동형변환이 된다
	-정수 + 정수 = 정수
	 실수 + 실수 = 실수
	 정수 + 실수 = 실수
	-문자는 정수로 자동형변환 된다.

	강제 형변환	(자료형)값

	다른 자료형 -> 문자열 형변환
		기본 자료형과 빈 문자열("")연결(+)시켜서 형변환
		기본 자료형 + ""(빈 문자열)
		ex) 3+""=>"3"
		3+"입니다"=>"3입니다"

	문자열 자료형 -> 다른 자료형 형변환
		int, double, char, boolean이 아닌
		클래스 타입이므로 해당 클래스의 메소드로 형변환이 가능하다

	정수형(int)	Integer.parseInt("35")
	실수형(double)	Double.parseDouble("52.25")
	논리형(boolean)	Boolean.parseBoolean("true")
	문자형(char)	"문자열".charAt(int index)

※int index : 문자들의 나열에서 하나의 문자가 있는 위치 (0부터 시작함)

0.2. Input Method(입력 메소드)

Scanner sc = new Scanner(System.in);
sc.next() : 문자열 값을 반환, 엔터를 소모하지 않음
sc.nextLine() : 문자열 값을 반환, 엔터를 소모함
sc.nextInt() : 정수형 값을 반환, 엔터를 소모하지 않음
sc.nextDouble() : 실수형 값을 반환, 엔터를 소모하지 않음

1. Operator(연산자)
Operator란? : 기능이 있는 특수문자

연산자의 우선순위

최우선 연산자	. []
단항 연산자	+ - ++ -- ! (양, 음, 증가, 감소, not)
산술 연산자	+ - * / % (사칙연산, 나머지)
쉬프트 연산자	<<, >>
관계 연산자	< > <= >= == !=
논리 연산자	and, or, not
삼항 연산자	조건식? 참일때의 값, 거짓일때의 값
대입 연산자	=

1.1. 산술 연산자
+ : String타입일때는 연결, int, double타입일때는 연산
- : String타입일때는 사용 불가, int, double 타입일때는 연산
* : String타입일때는 사용 불가, int, double 타입일때는 연산
/ : String타입일때는 사용 불가, int 타입일때는 연산
int/int=int(몫) int/0=error
% : String타입일때는 사용 불가, int 타입일때는 연산

1.2. 대입 연산자
오른쪽에 있는 값을 왼쪽의 저장공간에 저장함.

1.3. 복합대입연산자
+=, -=, *=, /=, %=
int num1=10;
num1=num1+5;//num1에 15가 저장됨.
num1+=5//위와 결과가 같음

1.4. 관계연산자
< > <= >= == !=
a > b : a가 b보다 크면 true, 아니면 false
a < b : a가 b보다 작으면 true, 아니면 false
a >= b : a가 b보다 크거나 같으면 true, 아니면 false
a <= b : a가 b보다 작거나 같으면 true, 아니면 false
a == b : a가 b랑 같으면 true, 아니면 false
a != b : a가 b랑 같지 않으면 true, 아니면 false

1.5. 증감연산자
++, -- 2가지가 존재
전위형 : 해당라인부터 바로 적용 ++num1, --num1
후위형 : 다음 라인부터 적용 num1++, num1--
※일반적으로는 후위형을 사용함※

피연산자를 1씩 증가시키거나 감소시킬때 사용함
피연산자가 단 하나 뿐인 단항연산자이다.

1.6. 논리연산자
& : (AND 논리 곱) ex) A&B : A, B모두 1이면 1
| : (OR 논리 합) ex) A|B : A, B중 하나라도 1이면 1
^ : (XOR 베타논리합) ex) A^B : A, B 서로 다르면 1
~ : (NOT 논리 부정) ex) ~A 0은 1로, 1은 0으로

조건식에서의 논리연산자(boolean)
&& (AND) : A&&B : 두 조건식이 모두 1이면 1
|| (OR) : A||B : 두 조건식 중 하나가 1이면 1
! (NOT) : !A : 조건식이 1이면 0, 0이면 1